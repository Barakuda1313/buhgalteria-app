document.addEventListener('DOMContentLoaded', function() {
    const modal = document.getElementById('editModal');
    const closeButton = document.querySelector('.close-button');
    const editForm = document.getElementById('editForm');

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ –∫–Ω–æ–ø–∫–µ
    if(closeButton) {
        closeButton.onclick = function() {
            modal.style.display = "none";
        }
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –µ–≥–æ
    window.onclick = function(event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    if(editForm) {
        editForm.addEventListener('submit', function(e) {
            e.preventDefault();
            saveEdit();
        });
    }

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –∏–∑ localStorage –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    loadHistory();
});

function loadHistory() {
    const history = JSON.parse(localStorage.getItem('allEntries')) || [];
    const tableBody = document.querySelector('#historyTable tbody');
    
    if (!tableBody) return; // –ï—Å–ª–∏ —Ç–∞–±–ª–∏—Ü—ã –Ω–µ—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ, –≤—ã—Ö–æ–¥–∏–º
    
    tableBody.innerHTML = '';

    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–æ –¥–∞—Ç–µ –æ—Ç –Ω–æ–≤–æ–π –∫ —Å—Ç–∞—Ä–æ–π
    history.sort((a, b) => new Date(b.date) - new Date(a.date));

    history.forEach(item => {
        const row = tableBody.insertRow();
        
        // –î–æ–±–∞–≤–ª—è–µ–º data-label –¥–ª—è –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏
        row.innerHTML = `
            <td data-label="–î–∞—Ç–∞">${item.date}</td>
            <td data-label="–¢–∏–ø" class="${item.type === 'income' ? 'income-text' : 'expense-text'}">${item.type === 'income' ? '–ü—Ä–∏—Ö–æ–¥' : '–†–∞—Å—Ö–æ–¥'}</td>
            <td data-label="–ö–∞—Ç–µ–≥–æ—Ä–∏—è">${item.category}</td>
            <td data-label="–°—É–º–º–∞">${item.amount} ‚ÇΩ</td>
            <td data-label="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å">${item.user}</td>
            <td data-label="–î–µ–π—Å—Ç–≤–∏—è" class="actions">
                <button onclick="openEditModal('${item.id}')">‚úèÔ∏è</button>
                <button onclick="deleteEntry('${item.id}')">üóëÔ∏è</button>
            </td>
        `;
    });
}

function deleteEntry(id) {
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É –∑–∞–ø–∏—Å—å?')) {
        let history = JSON.parse(localStorage.getItem('allEntries')) || [];
        
        const numericId = Number(id);
        const updatedHistory = history.filter(item => item.id !== numericId);
        
        localStorage.setItem('allEntries', JSON.stringify(updatedHistory));
        
        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Ç–∞–±–ª–∏—Ü—É, —á—Ç–æ–±—ã –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
        loadHistory();
    }
}

function openEditModal(id) {
    const history = JSON.parse(localStorage.getItem('allEntries')) || [];
    const numericId = Number(id);
    const entry = history.find(item => item.id === numericId);

    if (entry) {
        document.getElementById('editId').value = entry.id;
        document.getElementById('editDate').value = entry.date;
        document.getElementById('editType').value = entry.type;
        document.getElementById('editCategory').value = entry.category;
        document.getElementById('editAmount').value = entry.amount;
        document.getElementById('editUser').value = entry.user;
        
        document.getElementById('editModal').style.display = 'block';
    }
}

function saveEdit() {
    const id = document.getElementById('editId').value;
    const numericId = Number(id);

    let history = JSON.parse(localStorage.getItem('allEntries')) || [];
    const entryIndex = history.findIndex(item => item.id === numericId);

    if (entryIndex > -1) {
        history[entryIndex] = {
            id: numericId,
            date: document.getElementById('editDate').value,
            type: document.getElementById('editType').value,
            category: document.getElementById('editCategory').value,
            amount: parseFloat(document.getElementById('editAmount').value),
            user: document.getElementById('editUser').value
        };

        localStorage.setItem('allEntries', JSON.stringify(history));
        document.getElementById('editModal').style.display = 'none';
        loadHistory();
    }
}