// history.js

document.addEventListener('DOMContentLoaded', function() {
    const modal = document.getElementById('editModal');
    const closeButton = document.querySelector('.close-button');
    const editForm = document.getElementById('editForm');

    if(closeButton) {
        closeButton.onclick = () => { modal.style.display = "none"; };
    }
    window.onclick = (event) => {
        if (event.target == modal) {
            modal.style.display = "none";
        }
    };
    if(editForm) {
        editForm.addEventListener('submit', (e) => {
            e.preventDefault();
            saveEdit();
        });
    }

    loadHistory();
});

async function loadHistory() {
    const tableBody = document.querySelector('#historyTable tbody');
    if (!tableBody) return;
    
    tableBody.innerHTML = '<tr><td colspan="6">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞...</td></tr>';

    try {
        const response = await fetch('/api/history'); // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —É –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
        if (!response.ok) throw new Error(`–û—à–∏–±–∫–∞ —Å–µ—Ç–∏: ${response.statusText}`);
        
        const history = await response.json();
        
        tableBody.innerHTML = '';

        if (history.length === 0) {
            tableBody.innerHTML = '<tr><td colspan="6">–í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π.</td></tr>';
            return;
        }

        history.forEach(item => {
            const row = tableBody.insertRow();
            row.innerHTML = `
                <td data-label="–î–∞—Ç–∞">${item.date}</td>
                <td data-label="–¢–∏–ø" class="${item.type === 'income' ? 'income-text' : 'expense-text'}">${item.type === 'income' ? '–ü—Ä–∏—Ö–æ–¥' : '–†–∞—Å—Ö–æ–¥'}</td>
                <td data-label="–ö–∞—Ç–µ–≥–æ—Ä–∏—è">${item.category}</td>
                <td data-label="–°—É–º–º–∞">${item.amount} ‚ÇΩ</td>
                <td data-label="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å">${item.user}</td>
                <td data-label="–î–µ–π—Å—Ç–≤–∏—è" class="actions">
                    <button onclick="openEditModal(${item.id})">‚úèÔ∏è</button>
                    <button onclick="deleteEntry(${item.id})">üóëÔ∏è</button>
                </td>
            `;
        });

    } catch (error) {
        console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é:', error);
        tableBody.innerHTML = `<tr><td colspan="6" style="color: red;">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö.</td></tr>`;
    }
}

async function deleteEntry(id) {
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É –∑–∞–ø–∏—Å—å?')) {
        try {
            const response = await fetch(`/api/history/${id}`, {
                method: 'DELETE',
            });

            if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.');

            loadHistory(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π

        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏:', error);
            alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏.');
        }
    }
}

function openEditModal(id) {
    // –ù–∞—Ö–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –ø—Ä—è–º–æ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã, —á—Ç–æ–±—ã –Ω–µ –¥–µ–ª–∞—Ç—å –ª–∏—à–Ω–∏–π –∑–∞–ø—Ä–æ—Å
    const row = event.target.closest('tr');
    const cells = row.querySelectorAll('td');

    document.getElementById('editId').value = id;
    document.getElementById('editDate').value = cells[0].textContent;
    document.getElementById('editType').value = cells[1].textContent === '–ü—Ä–∏—Ö–æ–¥' ? 'income' : 'expense';
    document.getElementById('editCategory').value = cells[2].textContent;
    document.getElementById('editAmount').value = parseFloat(cells[3].textContent);
    document.getElementById('editUser').value = cells[4].textContent;
    
    document.getElementById('editModal').style.display = 'block';
}

async function saveEdit() {
    const id = document.getElementById('editId').value;
    const updatedEntry = {
        date: document.getElementById('editDate').value,
        type: document.getElementById('editType').value,
        category: document.getElementById('editCategory').value,
        amount: parseFloat(document.getElementById('editAmount').value),
        user: document.getElementById('editUser').value
    };

    try {
        const response = await fetch(`/api/history/${id}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(updatedEntry),
        });

        if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.');

        document.getElementById('editModal').style.display = 'none';
        loadHistory(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Ç–∞–±–ª–∏—Ü—É

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π:', error);
        alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏.');
    }
}